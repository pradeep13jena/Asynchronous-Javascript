fetchData('https://dummyapi.com/data', signal)
  .then(data => console.log(data))
  .catch(error => {
    if (error.name === 'AbortError') {
      console.error('Request was cancelled:', error.message);
    } else {
      console.error('An error occurred:', error.message);
    }
  });



https://dummyjson.com/users/1

--------------------------------------
document.addEventListener('DOMContentLoaded', () => {
    const dataContainer = document.getElementById('data-container');

    // Function to fetch data from JSONPlaceholder API
    function fetchData() {
        // Fetch request promise
        const fetchPromise = fetch('https://dummyjson.com/posts')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            });

        // Timeout promise
        const timeoutPromise = new Promise((_, reject) => {
            setTimeout(() => reject(new Error('Operation timed out')), 5000);
        });

        // Race between fetch and timeout promises
        return Promise.race([fetchPromise, timeoutPromise]);
    }

    // Call fetchData and update the div based on the promise result
    fetchData()
        .then(data => {
            // Create a string to display the first post's title and body
            const posts = data.posts;
            const displayContent = posts.map(post => `<h2>${post.title}</h2><p>${post.body}</p>`).join('');
            dataContainer.innerHTML = displayContent;
        })
        .catch(error => {
            dataContainer.innerHTML = `Error: ${error.message}`;
        });
});
